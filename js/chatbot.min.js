class ChatBot{constructor(){try{this.logger=new Logger,this.initDOMElements(),this.initDOMEvents(),this.questions={},this.currentQuestion="start",this.answers={},this.progressListeners=[]}catch(t){this.logger.error("Erro ao inicializar o chat",t)}}initDOMElements(){try{this.chatWrapper=document.getElementById("mkt-chatbot-wrapper"),this.chatIcon=this.chatWrapper.querySelector("#mkt-chatbot-icon"),this.chatMain=this.chatWrapper.querySelector("#mkt-chatbot"),this.minimizeButton=this.chatWrapper.querySelector("#mkt-chatbot-minimize"),this.chatLog=this.chatWrapper.querySelector("#mkt-chatbot-log"),this.inputArea=this.chatWrapper.querySelector("#mkt-chatbot-inputs")}catch(t){this.logger.error("Verifique se o elemento #mkt-chatbot-wrapper existe no DOM.",t)}}initDOMEvents(){try{this.chatIcon.addEventListener("click",()=>this.openChat()),this.minimizeButton.addEventListener("click",()=>this.minimizeChat())}catch(t){this.logger.error("Erro ao inicializar eventos do DOM",t)}}start(){try{this.showQuestion(this.currentQuestion),this.chatWrapper.classList.remove("hidden")}catch(t){this.logger.error("Erro ao iniciar a conversa. Verifique se você adicionou pelo menos uma pergunta.",t)}}addQuestion(t,e,r,i=[],s=null){this.questions[t]?this.logger.warn(`A pergunta com a chave ${t} já existe. A pergunta não será adicionada novamente.`):this.questions[t]={text:e,type:r,choices:i,nextQuestion:s}}addProgressListener(t){"function"==typeof t&&this.progressListeners.push(t)}notifyProgressListeners(e){this.progressListeners.forEach(t=>t(e))}async showQuestion(e,t=0){try{var r=this.questions[e];if(!r)throw new Error(`A pergunta com a chave ${e} não foi encontrada.`);this.clearInputArea(),"function"==typeof r.text?await this.appendBotMessage(r.text(this.answers)):await this.appendBotMessage(r.text);const i=this.getRenderMethod(r.type);if(!i)throw new Error(`O tipo de input ${r.type} não é suportado.`);"select"===r.type||"text"===r.type?i.call(this,r.choices):r.choices.forEach(t=>i.call(this,t)),this.scrollToBottom()}catch(t){this.logger.error(`Erro ao mostrar a pergunta com a chave ${e}. Verifique se a pergunta existe e se o tipo de input é suportado.`,t)}}getRenderMethod(t){return{button:this.renderButton,select:this.renderSelect,text:this.renderText,link:this.renderLink}[t]||null}renderButton(e){try{var t=this.createElement("div","chat-inputs__dynamic"),r=this.createElement("button","input--buttons",e.text);r.addEventListener("click",()=>this.processAnswer(e)),t.appendChild(r),this.inputArea.appendChild(t)}catch(t){this.logger.error(`Erro ao renderizar botão com o texto ${e.text}. Verifique se o texto é uma string e se você adicionou pelo menos uma pergunta.`,t)}}renderSelect(e){try{var t=this.createElement("div","chat-inputs__dynamic");const r=this.createElement("select","input--select");r.appendChild(this.createElement("option",null,"Selecione uma opção",{value:""})),e.forEach(t=>{let e={};(e=t.attrs?t.attrs:e).value=t.value;t=this.createElement("option",null,t.text,e);r.appendChild(t)}),r.addEventListener("change",t=>this.processAnswer({text:t.target.selectedOptions[0].text,value:t.target.value})),t.appendChild(r),this.inputArea.appendChild(t)}catch(t){this.logger.error(`Erro ao renderizar select com as opções ${e}. Verifique se o array de opções é válido e se você adicionou pelo menos uma pergunta.`,t)}}maskInput(t,a=["(00) 0000-0000","(00) 00000-0000"]){const o=Math.max(...a.map(t=>t.replace(/\D/g,"").length));t.addEventListener("input",function(t){let e=this.value.replace(/\D/g,"");var r;e=e.substring(0,o);let i="",s=0;for(r of a.find(t=>t.replace(/\D/g,"").length>=e.length)||a[a.length-1]){if(s>=e.length)break;/\D/.test(r)?i+=r:i+=e[s++]}this.value=i})}renderText(e={}){try{let t={};e.attrs&&(t=e.attrs);var r=this.createElement("div","chat-inputs__dynamic");const s=this.createElement("input","input--text",null,t);"tel"==t.type&&this.maskInput(s,["(00) 0000-0000","(00) 00000-0000"]),t.data_cpf&&this.maskInput(s,["000.000.000-00","00.000.000/0000-00"]),t.data_cep&&this.maskInput(s,["00000-000"]),t.data_data&&this.maskInput(s,["00/00/0000"]),s.addEventListener("change",t=>this.processAnswer({text:t.target.value,value:t.target.value}));var i=this.createElement("button","chat-inputs__send-button","");i.addEventListener("click",()=>this.processAnswer({text:s.value,value:s.value})),r.appendChild(s),r.appendChild(i),this.inputArea.appendChild(r)}catch(t){this.logger.error(`Erro ao renderizar input de texto com as opções ${e}. Verifique se o array de opções é válido e se você adicionou pelo menos uma pergunta.`,t)}}renderLink(e){try{var t=this.createElement("div","chat-inputs__dynamic"),r=(e.attrs&&e.attrs,this.createElement("a","input--link",e.text,e.attrs));r.addEventListener("click",()=>this.processAnswer(e,!1)),t.appendChild(r),this.inputArea.appendChild(t)}catch(t){this.logger.error(`Erro ao renderizar link com o texto ${e.text}. Verifique se o texto é uma string e se você adicionou pelo menos uma pergunta.`,t)}}async appendBotMessage(e){try{await this.appendBotTyping();var t=this.createElement("div","bot-message",e);this.chatLog.appendChild(t),this.scrollToBottom()}catch(t){this.logger.error(`Erro ao anexar a mensagem do bot com o texto ${e}. Verifique se o texto é uma string e se você adicionou pelo menos uma pergunta.`,t)}}clearInputArea(){try{for(;this.inputArea.firstChild;)this.inputArea.removeChild(this.inputArea.firstChild)}catch(t){this.logger.error("Erro ao limpar a área de input. Verifique se você adicionou pelo menos uma pergunta.",t)}}async appendBotTyping(){try{const e=this.createElement("div","bot-message-typing");["dot1","dot2","dot3"].forEach(t=>{t=this.createElement("span","dot",null,{id:t});e.appendChild(t)}),this.chatLog.appendChild(e),this.scrollToBottom(),await this.sleep(1e3),this.chatLog.removeChild(e)}catch(t){this.logger.error("Erro ao anexar o elemento de 'digitando'",t)}}async processAnswer(t,e=!0){try{this.storeAnswer(this.currentQuestion,t),e&&await this.appendUserMessage(t.text);var r=await this.getNextQuestionKey(t),i={currentQuestion:this.currentQuestion,answer:t,nextQuestion:r,answers:this.answers};this.notifyProgressListeners(i),r&&(this.currentQuestion=r,this.showQuestion(this.currentQuestion,t))}catch(t){this.logger.error("Erro ao processar a resposta",t)}}storeAnswer(t,e){this.answers[t]=e}async getNextQuestionKey(t){var e=this.questions[this.currentQuestion];return e.nextQuestion?e.nextQuestion(t):null}async appendUserMessage(t){try{var e=this.createElement("div","user-message",t);this.chatLog.appendChild(e),this.scrollToBottom()}catch(t){this.logger.error("Erro ao anexar a mensagem do usuário",t)}}scrollToBottom(){this.chatLog?this.chatLog.scrollTop=this.chatLog.scrollHeight:this.logger.error("Erro ao rolar o chat para o final. Verifique se você adicionou o elemento #mkt-chatbot-log no DOM.")}createElement(t,e,r,i={}){const s=document.createElement(t);return e&&(s.className=e),r&&(s.textContent=r),Object.keys(i).forEach(t=>s.setAttribute(t,i[t])),s}sleep(e){return new Promise(t=>setTimeout(t,e))}openChat(){try{this.logger.debug("Para fechar clique no botão de minimizar."),this.chatIcon.classList.add("hidden"),this.chatMain.classList.remove("hidden")}catch(t){this.logger.error("Erro ao abrir o chat. Verifique se você adicionou os elementos #mkt-chatbot-icon e #mkt-chatbot no DOM.",t)}}minimizeChat(){try{this.chatMain.style.animation="slide-fade-out 0.5s ease forwards",this.chatMain.addEventListener("animationend",()=>{this.chatMain.classList.add("hidden"),this.chatMain.style.animation=""},{once:!0}),this.chatIcon.classList.remove("hidden")}catch(t){this.logger.error("Erro ao minimizar o chat. Verifique se você adicionou os elementos #mkt-chatbot-icon e #mkt-chatbot no DOM.",t)}}}
//# sourceMappingURL=chatbot.min.js.map
